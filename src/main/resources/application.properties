application.name = Anushka\'s Flowers by Moon
application.version = 1.0.0
application.date = 2017-04-29
application.description = Backend application to track customers, inventory, and orders.

#spring.resources.static-locations=classpath:/build/reports/
spring.resources.static-locations=build/reports/
spring.devtools.restart.additional-paths = webapp/
spring.h2.console.enabled=true
spring.output.ansi.enabled=ALWAYS

#LOGGING
#logging.level.org.springframework.web=DEBUG
#hibernate.generate_statistics=true
logging.level.org.hibernate=ERROR
#org.hibernate.stat=true
org.hibernate.SQL=ERROR

#H2 CONNECTIVITY
spring.datasource.url=jdbc:h2:mem:ANUSHKA;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#JDBC TEMPLATE CONNECTION SETTINGS...
#   should not be needed when we add
#   `compile('org.springframework.boot:spring-boot-starter-jdbc')`
#   to build.gradle...but these are placeholders if we decide to use a Production database in the future,
#   just replace with Oracle/SQLServer/DB2/Mongo/whatev.
#jdbc.driverClassName=org.h2.Driver
#jdbc.url=jdbc:h2:mem:ANUSHKA;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#jdbc.username=sa
#jdbc.password=

spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS = false
spring.jackson.serialization.indent_output=true

test.reset.sql.template=ALTER TABLE %s ALTER COLUMN id RESTART WITH 1
test.reset.sql.template.2=ALTER TABLE %s ALTER COLUMN orders_id RESTART WITH 1

